map $http_x_forwarded_proto $proxy_x_forwarded_proto {
  default $http_x_forwarded_proto;
  ''      $scheme;
}

map $http_upgrade $proxy_connection {
  default upgrade;
  ''      'close';
}

map $http_host $proxy_host {
    {{ if has_key .Env "HOST" }}default "{{ .Env.HOST }}";
    {{ else }}default $http_host;
    '' $host;{{ end }}
}

upstream app {
  server {{ .Env.UPSTREAM_HOST }}:{{ .Env.UPSTREAM_PORT }} max_fails=1 fail_timeout=3s;
}

server {
  listen {{ .Env.LISTEN_PORT }};
  server_name _;

{{ if eql .Env.FORCE_SSL "on" }}
  if ($http_x_forwarded_proto = 'http') {
    return 301 https://$proxy_host$request_uri;
  }
{{ end }}

  location / {
      proxy_pass http://app;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      proxy_set_header X-NginX-Proxy true;
  }

  location ~* /(user[-/][a-zA-Z0-9]*)/(api/kernels/[^/]+/(channels|iopub|shell|stdin)|terminals/websocket)/? {
      proxy_pass http://app;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      proxy_set_header X-NginX-Proxy true;

      # WebSocket support
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_read_timeout 86400;

  }
}

{{ path "/etc/nginx/conf.d" }}
